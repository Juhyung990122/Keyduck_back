plugins {
	id 'org.springframework.boot' version '2.4.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'net.ltgt.apt' version '0.15'
}
apply plugin: "net.ltgt.apt"
apply plugin: "java"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"

sourceCompatibility = '1.8'

jar {
	baseName = 'keyduck_back'
	version = '0.1.0'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'junit:junit:4.12'
	implementation 'junit:junit:4.12'
    implementation 'org.projectlombok:lombok:1.18.18'
    runtimeOnly 'mysql:mysql-connector-java'
	implementation 'com.google.code.findbugs:jsr305:3.0.2'
	implementation 'org.elasticsearch.client:elasticsearch-rest-high-level-client:7.9.0'
	implementation 'org.elasticsearch:elasticsearch:7.9.0'
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
	runtimeOnly 'com.h2database:h2'

	compileOnly 'org.projectlombok:lombok:1.18.8'
	annotationProcessor 'org.projectlombok:lombok:1.18.8'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	implementation('org.springframework.boot:spring-boot-starter-validation')
	implementation('org.mapstruct:mapstruct:1.3.0.Beta2')
    annotationProcessor('org.mapstruct:mapstruct-processor:1.3.0.Beta2')
	// Swagger 2
	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.8.0'
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.8.0'

	implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
	implementation 'org.springframework.boot:spring-boot-starter-tomcat'
	compile "org.springframework.boot:spring-boot-starter-security"
	compile('com.fasterxml.jackson.dataformat:jackson-dataformat-xml')
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testCompileOnly 'org.projectlombok:lombok:1.18.20'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'
}

test {
	useJUnitPlatform()
}

wrapper {
	gradleVersion = '6.8'
}

task stage(dependsOn: ['build', 'clean'])

build.mustRunAfter clean